snippet MPI_Start
MPI_Start( ${1:MPI_Request* request} );
endsnippet
snippet MPI_File_write_all_begin
MPI_File_write_all_begin( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} );
endsnippet
snippet MPI_Win_post
MPI_Win_post( ${1:MPI_Group group} , ${2:int assert} , ${3:MPI_Win win} );
endsnippet
snippet MPI_Win_get_errhandler
MPI_Win_get_errhandler( ${1:MPI_Win win} , ${2:MPI_Errhandler* errhandler} );
endsnippet
snippet MPI_File_get_group
MPI_File_get_group( ${1:MPI_File fh} , ${2:MPI_Group* group} );
endsnippet
snippet MPI_Scan
MPI_Scan( ${1:void* sendbuf} , ${2:void* recvbuf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Op op} , ${6:MPI_Comm comm} );
endsnippet
snippet MPI_Startall
MPI_Startall( ${1:int count} , ${2:MPI_Request array_of_requests[]} );
endsnippet
snippet MPI_Attr_delete
MPI_Attr_delete( ${1:MPI_Comm comm} , ${2:int keyval} );
endsnippet
snippet MPI_File_iwrite_shared
MPI_File_iwrite_shared( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Request* request} );
endsnippet
snippet MPI_Comm_get_attr
MPI_Comm_get_attr( ${1:MPI_Comm comm} , ${2:int comm_keyval} , ${3:void* attribute_val} , ${4:int* flag} );
endsnippet
snippet MPI_File_get_info
MPI_File_get_info( ${1:MPI_File fh} , ${2:MPI_Info* info_used} );
endsnippet
snippet MPI_Type_delete_attr
MPI_Type_delete_attr( ${1:MPI_Datatype type} , ${2:int type_keyval} );
endsnippet
snippet MPI_Error_class
MPI_Error_class( ${1:int errorcode} , ${2:int* errorclass} );
endsnippet
snippet MPI_Free_mem
MPI_Free_mem( ${1:void* base} );
endsnippet
snippet MPI_Info_dup
MPI_Info_dup( ${1:MPI_Info info} , ${2:MPI_Info* newinfo} );
endsnippet
snippet MPI_Type_lb
MPI_Type_lb( ${1:MPI_Datatype type} , ${2:MPI_Aint* lb} );
endsnippet
snippet MPI_Cart_get
MPI_Cart_get( ${1:MPI_Comm comm} , ${2:int maxdims} , ${3:int dims[]} , ${4:int periods[]} , ${5:int coords[]} );
endsnippet
snippet MPI_Add_error_class
MPI_Add_error_class( ${1:int* errorclass} );
endsnippet
snippet MPI_File_write_shared
MPI_File_write_shared( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Buffer_detach
MPI_Buffer_detach( ${1:void* buffer} , ${2:int* size} );
endsnippet
snippet MPI_File_set_size
MPI_File_set_size( ${1:MPI_File fh} , ${2:MPI_Offset size} );
endsnippet
snippet MPI_Intercomm_create
MPI_Intercomm_create( ${1:MPI_Comm local_comm} , ${2:int local_leader} , ${3:MPI_Comm bridge_comm} , ${4:int remote_leader} , ${5:int tag} , ${6:MPI_Comm* newintercomm} );
endsnippet
snippet MPI_File_iread_at
MPI_File_iread_at( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:void* buf} , ${4:int count} , ${5:MPI_Datatype datatype} , ${6:MPI_Request* request} );
endsnippet
snippet MPI_Allreduce
MPI_Allreduce( ${1:void* sendbuf} , ${2:void* recvbuf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Op op} , ${6:MPI_Comm comm} );
endsnippet
snippet MPI_Comm_create_keyval
MPI_Comm_create_keyval( ${1:MPI_Comm_copy_attr_function* comm_copy_attr_fn} , ${2:MPI_Comm_delete_attr_function* comm_delete_attr_fn} , ${3:int* comm_keyval} , ${4:void* extra_state} );
endsnippet
snippet MPI_Ibsend
MPI_Ibsend( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_File_read_all_end
MPI_File_read_all_end( ${1:MPI_File fh} , ${2:void* buf} , ${3:MPI_Status* status} );
endsnippet
snippet MPI_Comm_remote_size
MPI_Comm_remote_size( ${1:MPI_Comm comm} , ${2:int* size} );
endsnippet
snippet MPI_Type_contiguous
MPI_Type_contiguous( ${1:int count} , ${2:MPI_Datatype oldtype} , ${3:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Type_get_name
MPI_Type_get_name( ${1:MPI_Datatype type} , ${2:char* type_name} , ${3:int* resultlen} );
endsnippet
snippet MPI_Reduce
MPI_Reduce( ${1:void* sendbuf} , ${2:void* recvbuf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Op op} , ${6:int root} , ${7:MPI_Comm comm} );
endsnippet
snippet MPI_Type_commit
MPI_Type_commit( ${1:MPI_Datatype* type} );
endsnippet
snippet MPI_Comm_get_parent
MPI_Comm_get_parent( ${1:MPI_Comm* parent} );
endsnippet
snippet MPI_Testany
MPI_Testany( ${1:int count} , ${2:MPI_Request array_of_requests[]} , ${3:int* index} , ${4:int* flag} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Type_extent
MPI_Type_extent( ${1:MPI_Datatype type} , ${2:MPI_Aint* extent} );
endsnippet
snippet MPI_File_preallocate
MPI_File_preallocate( ${1:MPI_File fh} , ${2:MPI_Offset size} );
endsnippet
snippet MPI_File_get_position
MPI_File_get_position( ${1:MPI_File fh} , ${2:MPI_Offset* offset} );
endsnippet
snippet MPI_Sendrecv_replace
MPI_Sendrecv_replace( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int sendtag} , ${6:int source} , ${7:int recvtag} , ${8:MPI_Comm comm} , ${9:MPI_Status* status} );
endsnippet
snippet MPI_Type_get_extent
MPI_Type_get_extent( ${1:MPI_Datatype type} , ${2:MPI_Aint* lb} , ${3:MPI_Aint* extent} );
endsnippet
snippet MPI_Keyval_create
MPI_Keyval_create( ${1:MPI_Copy_function* copy_fn} , ${2:MPI_Delete_function* delete_fn} , ${3:int* keyval} , ${4:void* extra_state} );
endsnippet
snippet MPI_Mrecv
MPI_Mrecv( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:MPI_Message* message} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Type_hvector
MPI_Type_hvector( ${1:int count} , ${2:int blocklength} , ${3:MPI_Aint stride} , ${4:MPI_Datatype oldtype} , ${5:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Group_translate_ranks
MPI_Group_translate_ranks( ${1:MPI_Group group1} , ${2:int n} , ${3:int ranks1[]} , ${4:MPI_Group group2} , ${5:int ranks2[]} );
endsnippet
snippet MPI_Testsome
MPI_Testsome( ${1:int incount} , ${2:MPI_Request array_of_requests[]} , ${3:int* outcount} , ${4:int array_of_indices[]} , ${5:MPI_Status array_of_statuses[]} );
endsnippet
snippet MPI_Recv_init
MPI_Recv_init( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int source} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_Win_set_name
MPI_Win_set_name( ${1:MPI_Win win} , ${2:char* win_name} );
endsnippet
snippet MPI_Type_dup
MPI_Type_dup( ${1:MPI_Datatype type} , ${2:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Query_thread
MPI_Query_thread( ${1:int* provided} );
endsnippet
snippet MPI_Comm_group
MPI_Comm_group( ${1:MPI_Comm comm} , ${2:MPI_Group* group} );
endsnippet
snippet MPI_Add_error_code
MPI_Add_error_code( ${1:int errorclass} , ${2:int* errorcode} );
endsnippet
snippet MPI_Type_create_resized
MPI_Type_create_resized( ${1:MPI_Datatype oldtype} , ${2:MPI_Aint lb} , ${3:MPI_Aint extent} , ${4:MPI_Datatype* newtype} );
endsnippet
snippet MPI_File_seek_shared
MPI_File_seek_shared( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:int whence} );
endsnippet
snippet MPI_Unpublish_name
MPI_Unpublish_name( ${1:char* service_name} , ${2:MPI_Info info} , ${3:char* port_name} );
endsnippet
snippet MPI_Get_address
MPI_Get_address( ${1:void* location} , ${2:MPI_Aint* address} );
endsnippet
snippet MPI_Is_thread_main
MPI_Is_thread_main( ${1:int* flag} );
endsnippet
snippet MPI_Irecv
MPI_Irecv( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int source} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_Type_create_indexed_block
MPI_Type_create_indexed_block( ${1:int count} , ${2:int blocklength} , ${3:int array_of_displacements[]} , ${4:MPI_Datatype oldtype} , ${5:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Initialized
MPI_Initialized( ${1:int* flag} );
endsnippet
snippet MPI_File_iwrite
MPI_File_iwrite( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Request* request} );
endsnippet
snippet MPI_Bsend
MPI_Bsend( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} );
endsnippet
snippet MPI_Group_excl
MPI_Group_excl( ${1:MPI_Group group} , ${2:int n} , ${3:int ranks[]} , ${4:MPI_Group* newgroup} );
endsnippet
snippet MPI_Get_count
MPI_Get_count( ${1:MPI_Status* status} , ${2:MPI_Datatype datatype} , ${3:int* count} );
endsnippet
snippet MPI_Error_string
MPI_Error_string( ${1:int errorcode} , ${2:char* string} , ${3:int* resultlen} );
endsnippet
snippet MPI_Grequest_start
MPI_Grequest_start( ${1:MPI_Grequest_query_function* query_fn} , ${2:MPI_Grequest_free_function* free_fn} , ${3:MPI_Grequest_cancel_function* cancel_fn} , ${4:void* extra_state} , ${5:MPI_Request* request} );
endsnippet
snippet MPI_Cartdim_get
MPI_Cartdim_get( ${1:MPI_Comm comm} , ${2:int* ndims} );
endsnippet
snippet MPI_Allgather
MPI_Allgather( ${1:void* sendbuf} , ${2:int sendcount} , ${3:MPI_Datatype sendtype} , ${4:void* recvbuf} , ${5:int recvcount} , ${6:MPI_Datatype recvtype} , ${7:MPI_Comm comm} );
endsnippet
snippet MPI_Cart_coords
MPI_Cart_coords( ${1:MPI_Comm comm} , ${2:int rank} , ${3:int maxdims} , ${4:int coords[]} );
endsnippet
snippet MPI_Scatterv
MPI_Scatterv( ${1:void* sendbuf} , ${2:int sendcounts[]} , ${3:int displs[]} , ${4:MPI_Datatype sendtype} , ${5:void* recvbuf} , ${6:int recvcount} , ${7:MPI_Datatype recvtype} , ${8:int root} , ${9:MPI_Comm comm} );
endsnippet
snippet MPI_Issend
MPI_Issend( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_File_sync
MPI_File_sync( ${1:MPI_File fh} );
endsnippet
snippet MPI_Rsend
MPI_Rsend( ${1:void* ibuf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} );
endsnippet
snippet MPI_File_get_amode
MPI_File_get_amode( ${1:MPI_File fh} , ${2:int* amode} );
endsnippet
snippet MPI_Abort
MPI_Abort( ${1:MPI_Comm comm} , ${2:int errorcode} );
endsnippet
snippet MPI_Grequest_complete
MPI_Grequest_complete( ${1:MPI_Request request} );
endsnippet
snippet MPI_Pack
MPI_Pack( ${1:void* inbuf} , ${2:int incount} , ${3:MPI_Datatype datatype} , ${4:void* outbuf} , ${5:int outsize} , ${6:int* position} , ${7:MPI_Comm comm} );
endsnippet
snippet MPI_Win_set_attr
MPI_Win_set_attr( ${1:MPI_Win win} , ${2:int win_keyval} , ${3:void* attribute_val} );
endsnippet
snippet MPI_Info_create
MPI_Info_create( ${1:MPI_Info* info} );
endsnippet
snippet MPI_File_open
MPI_File_open( ${1:MPI_Comm comm} , ${2:char* filename} , ${3:int amode} , ${4:MPI_Info info} , ${5:MPI_File* fh} );
endsnippet
snippet MPI_Gatherv
MPI_Gatherv( ${1:void* sendbuf} , ${2:int sendcount} , ${3:MPI_Datatype sendtype} , ${4:void* recvbuf} , ${5:int recvcounts[]} , ${6:int displs[]} , ${7:MPI_Datatype recvtype} , ${8:int root} , ${9:MPI_Comm comm} );
endsnippet
snippet MPI_Type_get_attr
MPI_Type_get_attr( ${1:MPI_Datatype type} , ${2:int type_keyval} , ${3:void* attribute_val} , ${4:int* flag} );
endsnippet
snippet MPI_Comm_set_name
MPI_Comm_set_name( ${1:MPI_Comm comm} , ${2:char* comm_name} );
endsnippet
snippet MPI_Comm_disconnect
MPI_Comm_disconnect( ${1:MPI_Comm* comm} );
endsnippet
snippet MPI_Comm_remote_group
MPI_Comm_remote_group( ${1:MPI_Comm comm} , ${2:MPI_Group* group} );
endsnippet
snippet MPI_Cart_shift
MPI_Cart_shift( ${1:MPI_Comm comm} , ${2:int direction} , ${3:int disp} , ${4:int* rank_source} , ${5:int* rank_dest} );
endsnippet
snippet MPI_Init_thread
MPI_Init_thread( ${1:int* argc} , ${2:char*** argv} , ${3:int req} , ${4:int* provided} );
endsnippet
snippet MPI_Comm_size
MPI_Comm_size( ${1:MPI_Comm comm} , ${2:int* size} );
endsnippet
snippet MPI_Type_get_envelope
MPI_Type_get_envelope( ${1:MPI_Datatype type} , ${2:int* num_integers} , ${3:int* num_addresses} , ${4:int* num_datatypes} , ${5:int* combiner} );
endsnippet
snippet MPI_File_iread_shared
MPI_File_iread_shared( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Request* request} );
endsnippet
snippet MPI_File_set_errhandler
MPI_File_set_errhandler( ${1:MPI_File file} , ${2:MPI_Errhandler errhandler} );
endsnippet
snippet MPI_Register_datarep
MPI_Register_datarep( ${1:char* datarep} , ${2:MPI_Datarep_conversion_function* read_conversion_fn} , ${3:MPI_Datarep_conversion_function* write_conversion_fn} , ${4:MPI_Datarep_extent_function* dtype_file_extent_fn} , ${5:void* extra_state} );
endsnippet
snippet MPI_File_read_ordered
MPI_File_read_ordered( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Init
MPI_Init( ${1:int* argc} , ${2:char *** argv} );
endsnippet
snippet MPI_Waitsome
MPI_Waitsome( ${1:int incount} , ${2:MPI_Request array_of_requests[]} , ${3:int* outcount} , ${4:int array_of_indices[]} , ${5:MPI_Status array_of_statuses[]} );
endsnippet
snippet MPI_Group_difference
MPI_Group_difference( ${1:MPI_Group group1} , ${2:MPI_Group group2} , ${3:MPI_Group* newgroup} );
endsnippet
snippet MPI_Attr_get
MPI_Attr_get( ${1:MPI_Comm comm} , ${2:int keyval} , ${3:void* attribute_val} , ${4:int* flag} );
endsnippet
snippet MPI_Reduce_scatter
MPI_Reduce_scatter( ${1:void* sendbuf} , ${2:void* recvbuf} , ${3:int recvcounts[]} , ${4:MPI_Datatype datatype} , ${5:MPI_Op op} , ${6:MPI_Comm comm} );
endsnippet
snippet MPI_Group_incl
MPI_Group_incl( ${1:MPI_Group group} , ${2:int n} , ${3:int ranks[]} , ${4:MPI_Group* newgroup} );
endsnippet
snippet MPI_Imrecv
MPI_Imrecv( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:MPI_Message* message} , ${5:MPI_Request* status} );
endsnippet
snippet MPI_Wait
MPI_Wait( ${1:MPI_Request* request} , ${2:MPI_Status* status} );
endsnippet
snippet MPI_Testall
MPI_Testall( ${1:int count} , ${2:MPI_Request array_of_requests[]} , ${3:int* flag} , ${4:MPI_Status array_of_statuses[]} );
endsnippet
snippet MPI_File_set_info
MPI_File_set_info( ${1:MPI_File fh} , ${2:MPI_Info info} );
endsnippet
snippet MPI_Irsend
MPI_Irsend( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_Get_version
MPI_Get_version( ${1:int* version} , ${2:int* subversion} );
endsnippet
snippet MPI_Comm_create_errhandler
MPI_Comm_create_errhandler( ${1:MPI_Comm_errhandler_function* function} , ${2:MPI_Errhandler* errhandler} );
endsnippet
snippet MPI_File_write_all
MPI_File_write_all( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Comm_connect
MPI_Comm_connect( ${1:char* port_name} , ${2:MPI_Info info} , ${3:int root} , ${4:MPI_Comm comm} , ${5:MPI_Comm* newcomm} );
endsnippet
snippet MPI_Group_compare
MPI_Group_compare( ${1:MPI_Group group1} , ${2:MPI_Group group2} , ${3:int* result} );
endsnippet
snippet MPI_Address
MPI_Address( ${1:void* location} , ${2:MPI_Aint* address} );
endsnippet
snippet MPI_Comm_compare
MPI_Comm_compare( ${1:MPI_Comm comm1} , ${2:MPI_Comm comm2} , ${3:int* result} );
endsnippet
snippet MPI_Win_unlock
MPI_Win_unlock( ${1:int rank} , ${2:MPI_Win win} );
endsnippet
snippet MPI_Pack_external
MPI_Pack_external( ${1:char* datarep} , ${2:void* inbuf} , ${3:int incount} , ${4:MPI_Datatype datatype} , ${5:void* outbuf} , ${6:MPI_Aint outsize} , ${7:MPI_Aint* position} );
endsnippet
snippet MPI_Request_free
MPI_Request_free( ${1:MPI_Request* request} );
endsnippet
snippet MPI_Topo_test
MPI_Topo_test( ${1:MPI_Comm comm} , ${2:int* status} );
endsnippet
snippet MPI_File_read
MPI_File_read( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Buffer_attach
MPI_Buffer_attach( ${1:void* buffer} , ${2:int size} );
endsnippet
snippet MPI_Win_call_errhandler
MPI_Win_call_errhandler( ${1:MPI_Win win} , ${2:int errorcode} );
endsnippet
snippet MPI_Win_get_group
MPI_Win_get_group( ${1:MPI_Win win} , ${2:MPI_Group* group} );
endsnippet
snippet MPI_Errhandler_create
MPI_Errhandler_create( ${1:MPI_Handler_function* function} , ${2:MPI_Errhandler* errhandler} );
endsnippet
snippet MPI_Cart_create
MPI_Cart_create( ${1:MPI_Comm old_comm} , ${2:int ndims} , ${3:int dims[]} , ${4:int periods[]} , ${5:int reorder} , ${6:MPI_Comm* comm_cart} );
endsnippet
snippet MPI_Status_set_cancelled
MPI_Status_set_cancelled( ${1:MPI_Status* status} , ${2:int flag} );
endsnippet
snippet MPI_Win_get_attr
MPI_Win_get_attr( ${1:MPI_Win win} , ${2:int win_keyval} , ${3:void* attribute_val} , ${4:int* flag} );
endsnippet
snippet MPI_Type_struct
MPI_Type_struct( ${1:int count} , ${2:int array_of_blocklengths[]} , ${3:MPI_Aint array_of_displacements[]} , ${4:MPI_Datatype array_of_types[]} , ${5:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Graph_neighbors_count
MPI_Graph_neighbors_count( ${1:MPI_Comm comm} , ${2:int rank} , ${3:int* nneighbors} );
endsnippet
snippet MPI_File_get_view
MPI_File_get_view( ${1:MPI_File fh} , ${2:MPI_Offset* disp} , ${3:MPI_Datatype* etype} , ${4:MPI_Datatype* filetype} , ${5:char* datarep} );
endsnippet
snippet MPI_Allgatherv
MPI_Allgatherv( ${1:void* sendbuf} , ${2:int sendcount} , ${3:MPI_Datatype sendtype} , ${4:void* recvbuf} , ${5:int recvcounts[]} , ${6:int displs[]} , ${7:MPI_Datatype recvtype} , ${8:MPI_Comm comm} );
endsnippet
snippet MPI_Sendrecv
MPI_Sendrecv( ${1:void* sendbuf} , ${2:int sendcount} , ${3:MPI_Datatype sendtype} , ${4:int dest} , ${5:int sendtag} , ${6:void* recvbuf} , ${7:int recvcount} , ${8:MPI_Datatype recvtype} , ${9:int source} , ${10:int recvtag} , ${11:MPI_Comm comm} , ${12:MPI_Status* status} );
endsnippet
snippet MPI_File_get_position_shared
MPI_File_get_position_shared( ${1:MPI_File fh} , ${2:MPI_Offset* offset} );
endsnippet
snippet MPI_Graph_neighbors
MPI_Graph_neighbors( ${1:MPI_Comm comm} , ${2:int rank} , ${3:int maxneighbors} , ${4:int neighbors[]} );
endsnippet
snippet MPI_Dims_create
MPI_Dims_create( ${1:int nnodes} , ${2:int ndims} , ${3:int dims[]} );
endsnippet
snippet MPI_File_iread
MPI_File_iread( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Request* request} );
endsnippet
snippet MPI_Scatter
MPI_Scatter( ${1:void* sendbuf} , ${2:int sendcount} , ${3:MPI_Datatype sendtype} , ${4:void* recvbuf} , ${5:int recvcount} , ${6:MPI_Datatype recvtype} , ${7:int root} , ${8:MPI_Comm comm} );
endsnippet
snippet MPI_File_get_byte_offset
MPI_File_get_byte_offset( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:MPI_Offset* disp} );
endsnippet
snippet MPI_Comm_free_keyval
MPI_Comm_free_keyval( ${1:int* comm_keyval} );
endsnippet
snippet MPI_Op_create
MPI_Op_create( ${1:MPI_User_function* function} , ${2:int commute} , ${3:MPI_Op* op} );
endsnippet
snippet MPI_File_seek
MPI_File_seek( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:int whence} );
endsnippet
snippet MPI_Add_error_string
MPI_Add_error_string( ${1:int errorcode} , ${2:char* string} );
endsnippet
snippet MPI_Mprobe
MPI_Mprobe( ${1:int source} , ${2:int tag} , ${3:MPI_Comm comm} , ${4:MPI_Message* message} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Ssend_init
MPI_Ssend_init( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_Rsend_init
MPI_Rsend_init( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_Info_free
MPI_Info_free( ${1:MPI_Info* info} );
endsnippet
snippet MPI_Publish_name
MPI_Publish_name( ${1:char* service_name} , ${2:MPI_Info info} , ${3:char* port_name} );
endsnippet
snippet MPI_Bcast
MPI_Bcast( ${1:void* buffer} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int root} , ${5:MPI_Comm comm} );
endsnippet
snippet MPI_Get_processor_name
MPI_Get_processor_name( ${1:char* name} , ${2:int* resultlen} );
endsnippet
snippet MPI_Info_set
MPI_Info_set( ${1:MPI_Info info} , ${2:char* key} , ${3:char* value} );
endsnippet
snippet MPI_File_write_ordered_end
MPI_File_write_ordered_end( ${1:MPI_File fh} , ${2:void* buf} , ${3:MPI_Status* status} );
endsnippet
snippet MPI_Graph_create
MPI_Graph_create( ${1:MPI_Comm comm} , ${2:int nnodes} , ${3:int index[]} , ${4:int edges[]} , ${5:int reorder} , ${6:MPI_Comm* comm_graph} );
endsnippet
snippet MPI_Comm_free
MPI_Comm_free( ${1:MPI_Comm* comm} );
endsnippet
snippet MPI_File_write_at_all
MPI_File_write_at_all( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:void* buf} , ${4:int count} , ${5:MPI_Datatype datatype} , ${6:MPI_Status* status} );
endsnippet
snippet MPI_Errhandler_get
MPI_Errhandler_get( ${1:MPI_Comm comm} , ${2:MPI_Errhandler* errhandler} );
endsnippet
snippet MPI_Pack_size
MPI_Pack_size( ${1:int incount} , ${2:MPI_Datatype datatype} , ${3:MPI_Comm comm} , ${4:int* size} );
endsnippet
snippet MPI_Comm_call_errhandler
MPI_Comm_call_errhandler( ${1:MPI_Comm comm} , ${2:int errorcode} );
endsnippet
snippet MPI_Comm_test_inter
MPI_Comm_test_inter( ${1:MPI_Comm comm} , ${2:int* flag} );
endsnippet
snippet MPI_Intercomm_merge
MPI_Intercomm_merge( ${1:MPI_Comm intercomm} , ${2:int high} , ${3:MPI_Comm* newintercomm} );
endsnippet
snippet MPI_Win_complete
MPI_Win_complete( ${1:MPI_Win win} );
endsnippet
snippet MPI_File_get_type_extent
MPI_File_get_type_extent( ${1:MPI_File fh} , ${2:MPI_Datatype datatype} , ${3:MPI_Aint* extent} );
endsnippet
snippet MPI_Graph_map
MPI_Graph_map( ${1:MPI_Comm comm} , ${2:int nnodes} , ${3:int index[]} , ${4:int edges[]} , ${5:int* newrank} );
endsnippet
snippet MPI_File_read_all_begin
MPI_File_read_all_begin( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} );
endsnippet
snippet MPI_Info_get_valuelen
MPI_Info_get_valuelen( ${1:MPI_Info info} , ${2:char* key} , ${3:int* valuelen} , ${4:int* flag} );
endsnippet
snippet MPI_Put
MPI_Put( ${1:void* origin_addr} , ${2:int origin_count} , ${3:MPI_Datatype origin_datatype} , ${4:int target_rank} , ${5:MPI_Aint target_disp} , ${6:int target_count} , ${7:MPI_Datatype target_datatype} , ${8:MPI_Win win} );
endsnippet
snippet MPI_File_read_at_all
MPI_File_read_at_all( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:void* buf} , ${4:int count} , ${5:MPI_Datatype datatype} , ${6:MPI_Status* status} );
endsnippet
snippet MPI_File_read_ordered_end
MPI_File_read_ordered_end( ${1:MPI_File fh} , ${2:void* buf} , ${3:MPI_Status* status} );
endsnippet
snippet MPI_Isend
MPI_Isend( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_Type_set_attr
MPI_Type_set_attr( ${1:MPI_Datatype type} , ${2:int type_keyval} , ${3:void* attr_val} );
endsnippet
snippet MPI_Group_rank
MPI_Group_rank( ${1:MPI_Group group} , ${2:int* rank} );
endsnippet
snippet MPI_Alltoall
MPI_Alltoall( ${1:void* sendbuf} , ${2:int sendcount} , ${3:MPI_Datatype sendtype} , ${4:void* recvbuf} , ${5:int recvcount} , ${6:MPI_Datatype recvtype} , ${7:MPI_Comm comm} );
endsnippet
snippet MPI_File_create_errhandler
MPI_File_create_errhandler( ${1:MPI_File_errhandler_function* function} , ${2:MPI_Errhandler* errhandler} );
endsnippet
snippet MPI_Info_get
MPI_Info_get( ${1:MPI_Info info} , ${2:char* key} , ${3:int valuelen} , ${4:char* value} , ${5:int* flag} );
endsnippet
snippet MPI_File_iwrite_at
MPI_File_iwrite_at( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:void* buf} , ${4:int count} , ${5:MPI_Datatype datatype} , ${6:MPI_Request* request} );
endsnippet
snippet MPI_Group_intersection
MPI_Group_intersection( ${1:MPI_Group group1} , ${2:MPI_Group group2} , ${3:MPI_Group* newgroup} );
endsnippet
snippet MPI_Type_free_keyval
MPI_Type_free_keyval( ${1:int* type_keyval} );
endsnippet
snippet MPI_Type_create_struct
MPI_Type_create_struct( ${1:int count} , ${2:int array_of_block_lengths[]} , ${3:MPI_Aint array_of_displacements[]} , ${4:MPI_Datatype array_of_types[]} , ${5:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Type_get_contents
MPI_Type_get_contents( ${1:MPI_Datatype mtype} , ${2:int max_integers} , ${3:int max_addresses} , ${4:int max_datatypes} , ${5:int array_of_integers[]} , ${6:MPI_Aint array_of_addresses[]} , ${7:MPI_Datatype array_of_datatypes[]} );
endsnippet
snippet MPI_Reduce_local
MPI_Reduce_local( ${1:void* inbuf} , ${2:void* inoutbuf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Op op} );
endsnippet
snippet MPI_Group_union
MPI_Group_union( ${1:MPI_Group group1} , ${2:MPI_Group group2} , ${3:MPI_Group* newgroup} );
endsnippet
snippet MPI_Type_free
MPI_Type_free( ${1:MPI_Datatype* type} );
endsnippet
snippet MPI_Info_get_nthkey
MPI_Info_get_nthkey( ${1:MPI_Info info} , ${2:int n} , ${3:char* key} );
endsnippet
snippet MPI_Win_get_name
MPI_Win_get_name( ${1:MPI_Win win} , ${2:char* win_name} , ${3:int* resultlen} );
endsnippet
snippet MPI_File_write_at_all_begin
MPI_File_write_at_all_begin( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:void* buf} , ${4:int count} , ${5:MPI_Datatype datatype} );
endsnippet
snippet MPI_Unpack_external
MPI_Unpack_external( ${1:char* datarep} , ${2:void* inbuf} , ${3:MPI_Aint insize} , ${4:MPI_Aint* position} , ${5:void* outbuf} , ${6:int outcount} , ${7:MPI_Datatype datatype} );
endsnippet
snippet MPI_Errhandler_set
MPI_Errhandler_set( ${1:MPI_Comm comm} , ${2:MPI_Errhandler errhandler} );
endsnippet
snippet MPI_File_read_at_all_begin
MPI_File_read_at_all_begin( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:void* buf} , ${4:int count} , ${5:MPI_Datatype datatype} );
endsnippet
snippet MPI_Comm_get_errhandler
MPI_Comm_get_errhandler( ${1:MPI_Comm comm} , ${2:MPI_Errhandler* erhandler} );
endsnippet
snippet MPI_Test_cancelled
MPI_Test_cancelled( ${1:MPI_Status* status} , ${2:int* flag} );
endsnippet
snippet MPI_Win_lock
MPI_Win_lock( ${1:int lock_type} , ${2:int rank} , ${3:int assert} , ${4:MPI_Win win} );
endsnippet
snippet MPI_Win_create
MPI_Win_create( ${1:void* base} , ${2:MPI_Aint size} , ${3:int disp_unit} , ${4:MPI_Info info} , ${5:MPI_Comm comm} , ${6:MPI_Win* win} );
endsnippet
snippet MPI_Test
MPI_Test( ${1:MPI_Request* request} , ${2:int* flag} , ${3:MPI_Status* status} );
endsnippet
snippet MPI_Type_create_hvector
MPI_Type_create_hvector( ${1:int count} , ${2:int blocklength} , ${3:MPI_Aint stride} , ${4:MPI_Datatype oldtype} , ${5:MPI_Datatype* newtype} );
endsnippet
snippet MPI_File_write_all_end
MPI_File_write_all_end( ${1:MPI_File fh} , ${2:void* buf} , ${3:MPI_Status* status} );
endsnippet
snippet MPI_Info_get_nkeys
MPI_Info_get_nkeys( ${1:MPI_Info info} , ${2:int* nkeys} );
endsnippet
snippet MPI_Win_start
MPI_Win_start( ${1:MPI_Group group} , ${2:int assert} , ${3:MPI_Win win} );
endsnippet
snippet MPI_File_get_size
MPI_File_get_size( ${1:MPI_File fh} , ${2:MPI_Offset* size} );
endsnippet
snippet MPI_Finalized
MPI_Finalized( ${1:int* flag} );
endsnippet
snippet MPI_Win_free_keyval
MPI_Win_free_keyval( ${1:int* win_keyval} );
endsnippet
snippet MPI_Waitany
MPI_Waitany( ${1:int count} , ${2:MPI_Request array_of_requests[]} , ${3:int* index} , ${4:MPI_Status* status} );
endsnippet
snippet MPI_Open_port
MPI_Open_port( ${1:MPI_Info info} , ${2:char* port_name} );
endsnippet
snippet MPI_Type_indexed
MPI_Type_indexed( ${1:int count} , ${2:int array_of_blocklengths[]} , ${3:int array_of_displacements[]} , ${4:MPI_Datatype oldtype} , ${5:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Send_init
MPI_Send_init( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_Gather
MPI_Gather( ${1:void* sendbuf} , ${2:int sendcount} , ${3:MPI_Datatype sendtype} , ${4:void* recvbuf} , ${5:int recvcount} , ${6:MPI_Datatype recvtype} , ${7:int root} , ${8:MPI_Comm comm} );
endsnippet
snippet MPI_Type_vector
MPI_Type_vector( ${1:int count} , ${2:int blocklength} , ${3:int stride} , ${4:MPI_Datatype oldtype} , ${5:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Get_elements
MPI_Get_elements( ${1:MPI_Status* status} , ${2:MPI_Datatype datatype} , ${3:int* count} );
endsnippet
snippet MPI_File_write
MPI_File_write( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_File_read_at_all_end
MPI_File_read_at_all_end( ${1:MPI_File fh} , ${2:void* buf} , ${3:MPI_Status* status} );
endsnippet
snippet MPI_Probe
MPI_Probe( ${1:int source} , ${2:int tag} , ${3:MPI_Comm comm} , ${4:MPI_Status* status} );
endsnippet
snippet MPI_File_set_view
MPI_File_set_view( ${1:MPI_File fh} , ${2:MPI_Offset disp} , ${3:MPI_Datatype etype} , ${4:MPI_Datatype filetype} , ${5:char* datarep} , ${6:MPI_Info info} );
endsnippet
snippet MPI_Unpack
MPI_Unpack( ${1:void* inbuf} , ${2:int insize} , ${3:int* position} , ${4:void* outbuf} , ${5:int outcount} , ${6:MPI_Datatype datatype} , ${7:MPI_Comm comm} );
endsnippet
snippet MPI_Type_ub
MPI_Type_ub( ${1:MPI_Datatype mtype} , ${2:MPI_Aint* ub} );
endsnippet
snippet MPI_Status_set_elements
MPI_Status_set_elements( ${1:MPI_Status* status} , ${2:MPI_Datatype datatype} , ${3:int count} );
endsnippet
snippet MPI_Win_delete_attr
MPI_Win_delete_attr( ${1:MPI_Win win} , ${2:int win_keyval} );
endsnippet
snippet MPI_Type_hindexed
MPI_Type_hindexed( ${1:int count} , ${2:int array_of_blocklengths[]} , ${3:MPI_Aint array_of_displacements[]} , ${4:MPI_Datatype oldtype} , ${5:MPI_Datatype* newtype} );
endsnippet
snippet MPI_File_set_atomicity
MPI_File_set_atomicity( ${1:MPI_File fh} , ${2:int flag} );
endsnippet
snippet MPI_Group_range_incl
MPI_Group_range_incl( ${1:MPI_Group group} , ${2:int n} , ${3:int ranges[][3]} , ${4:MPI_Group* newgroup} );
endsnippet
snippet MPI_Get
MPI_Get( ${1:void* origin_addr} , ${2:int origin_count} , ${3:MPI_Datatype origin_datatype} , ${4:int target_rank} , ${5:MPI_Aint target_disp} , ${6:int target_count} , ${7:MPI_Datatype target_datatype} , ${8:MPI_Win win} );
endsnippet
snippet MPI_Iprobe
MPI_Iprobe( ${1:int source} , ${2:int tag} , ${3:MPI_Comm comm} , ${4:int* flag} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_File_write_at_all_end
MPI_File_write_at_all_end( ${1:MPI_File fh} , ${2:void* buf} , ${3:MPI_Status* status} );
endsnippet
snippet MPI_Type_get_true_extent
MPI_Type_get_true_extent( ${1:MPI_Datatype datatype} , ${2:MPI_Aint* true_lb} , ${3:MPI_Aint* true_extent} );
endsnippet
snippet MPI_Graph_get
MPI_Graph_get( ${1:MPI_Comm comm} , ${2:int maxindex} , ${3:int maxedges} , ${4:int index[]} , ${5:int edges[]} );
endsnippet
snippet MPI_Info_delete
MPI_Info_delete( ${1:MPI_Info info} , ${2:char* key} );
endsnippet
snippet MPI_Cart_rank
MPI_Cart_rank( ${1:MPI_Comm comm} , ${2:int coords[]} , ${3:int* rank} );
endsnippet
snippet MPI_Finalize
MPI_Finalize();
endsnippet
snippet MPI_Comm_create
MPI_Comm_create( ${1:MPI_Comm comm} , ${2:MPI_Group group} , ${3:MPI_Comm* newcomm} );
endsnippet
snippet MPI_Pack_external_size
MPI_Pack_external_size( ${1:char* datarep} , ${2:int incount} , ${3:MPI_Datatype datatype} , ${4:MPI_Aint* size} );
endsnippet
snippet MPI_Comm_join
MPI_Comm_join( ${1:int fd} , ${2:MPI_Comm* intercomm} );
endsnippet
snippet MPI_File_read_at
MPI_File_read_at( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:void* buf} , ${4:int count} , ${5:MPI_Datatype datatype} , ${6:MPI_Status* status} );
endsnippet
snippet MPI_Keyval_free
MPI_Keyval_free( ${1:int* keyval} );
endsnippet
snippet MPI_Win_wait
MPI_Win_wait( ${1:MPI_Win win} );
endsnippet
snippet MPI_Alloc_mem
MPI_Alloc_mem( ${1:MPI_Aint size} , ${2:MPI_Info info} , ${3:void* baseptr} );
endsnippet
snippet MPI_Improbe
MPI_Improbe( ${1:int source} , ${2:int tag} , ${3:MPI_Comm comm} , ${4:int* flag} , ${5:MPI_Message* message} , ${6:MPI_Status* status} );
endsnippet
snippet MPI_Type_size
MPI_Type_size( ${1:MPI_Datatype type} , ${2:int* size} );
endsnippet
snippet MPI_Lookup_name
MPI_Lookup_name( ${1:char* service_name} , ${2:MPI_Info info} , ${3:char* port_name} );
endsnippet
snippet MPI_File_get_atomicity
MPI_File_get_atomicity( ${1:MPI_File fh} , ${2:int* flag} );
endsnippet
snippet MPI_File_read_shared
MPI_File_read_shared( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Type_create_darray
MPI_Type_create_darray( ${1:int size} , ${2:int rank} , ${3:int ndims} , ${4:int gsize_array[]} , ${5:int distrib_array[]} , ${6:int darg_array[]} , ${7:int psize_array[]} , ${8:int order} , ${9:MPI_Datatype oldtype} , ${10:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Win_create_errhandler
MPI_Win_create_errhandler( ${1:MPI_Win_errhandler_function* function} , ${2:MPI_Errhandler* errhandler} );
endsnippet
snippet MPI_Cart_map
MPI_Cart_map( ${1:MPI_Comm comm} , ${2:int ndims} , ${3:int dims[]} , ${4:int periods[]} , ${5:int* newrank} );
endsnippet
snippet MPI_File_write_at
MPI_File_write_at( ${1:MPI_File fh} , ${2:MPI_Offset offset} , ${3:void* buf} , ${4:int count} , ${5:MPI_Datatype datatype} , ${6:MPI_Status* status} );
endsnippet
snippet MPI_Comm_accept
MPI_Comm_accept( ${1:char* port_name} , ${2:MPI_Info info} , ${3:int root} , ${4:MPI_Comm comm} , ${5:MPI_Comm* newcomm} );
endsnippet
snippet MPI_Type_set_name
MPI_Type_set_name( ${1:MPI_Datatype type} , ${2:char* type_name} );
endsnippet
snippet MPI_Close_port
MPI_Close_port( ${1:char* port_name} );
endsnippet
snippet MPI_File_close
MPI_File_close( ${1:MPI_File* fh} );
endsnippet
snippet MPI_Type_create_subarray
MPI_Type_create_subarray( ${1:int ndims} , ${2:int size_array[]} , ${3:int subsize_array[]} , ${4:int start_array[]} , ${5:int order} , ${6:MPI_Datatype oldtype} , ${7:MPI_Datatype* newtype} );
endsnippet
snippet MPI_File_delete
MPI_File_delete( ${1:char* filename} , ${2:MPI_Info info} );
endsnippet
snippet MPI_Comm_set_attr
MPI_Comm_set_attr( ${1:MPI_Comm comm} , ${2:int comm_keyval} , ${3:void* attribute_val} );
endsnippet
snippet MPI_File_read_all
MPI_File_read_all( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Recv
MPI_Recv( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int source} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Status* status} );
endsnippet
snippet MPI_Comm_dup
MPI_Comm_dup( ${1:MPI_Comm comm} , ${2:MPI_Comm* newcomm} );
endsnippet
snippet MPI_Waitall
MPI_Waitall( ${1:int count} , ${2:MPI_Request array_of_requests[]} , ${3:MPI_Status array_of_statuses[]} );
endsnippet
snippet MPI_Comm_delete_attr
MPI_Comm_delete_attr( ${1:MPI_Comm comm} , ${2:int comm_keyval} );
endsnippet
snippet MPI_Ssend
MPI_Ssend( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} );
endsnippet
snippet MPI_Group_size
MPI_Group_size( ${1:MPI_Group group} , ${2:int* size} );
endsnippet
snippet MPI_File_get_errhandler
MPI_File_get_errhandler( ${1:MPI_File file} , ${2:MPI_Errhandler* errhandler} );
endsnippet
snippet MPI_Attr_put
MPI_Attr_put( ${1:MPI_Comm comm} , ${2:int keyval} , ${3:void* attribute_val} );
endsnippet
snippet MPI_Barrier
MPI_Barrier( ${1:MPI_Comm comm} );
endsnippet
snippet MPI_Win_free
MPI_Win_free( ${1:MPI_Win* win} );
endsnippet
snippet MPI_Alltoallw
MPI_Alltoallw( ${1:void* sendbuf} , ${2:int sendcounts[]} , ${3:int sdispls[]} , ${4:MPI_Datatype sendtypes[]} , ${5:void* recvbuf} , ${6:int recvcounts[]} , ${7:int rdispls[]} , ${8:MPI_Datatype recvtypes[]} , ${9:MPI_Comm comm} );
endsnippet
snippet MPI_Alltoallv
MPI_Alltoallv( ${1:void* sendbuf} , ${2:int sendcounts[]} , ${3:int sdispls[]} , ${4:MPI_Datatype sendtype} , ${5:void* recvbuf} , ${6:int recvcounts[]} , ${7:int rdispls[]} , ${8:MPI_Datatype recvtype} , ${9:MPI_Comm comm} );
endsnippet
snippet MPI_Bsend_init
MPI_Bsend_init( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} , ${7:MPI_Request* request} );
endsnippet
snippet MPI_Exscan
MPI_Exscan( ${1:void* sendbuf} , ${2:void* recvbuf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Op op} , ${6:MPI_Comm comm} );
endsnippet
snippet MPI_Op_free
MPI_Op_free( ${1:MPI_Op* op} );
endsnippet
snippet MPI_Win_set_errhandler
MPI_Win_set_errhandler( ${1:MPI_Win win} , ${2:MPI_Errhandler errhandler} );
endsnippet
snippet MPI_Accumulate
MPI_Accumulate( ${1:void* origin_addr} , ${2:int origin_count} , ${3:MPI_Datatype origin_datatype} , ${4:int target_rank} , ${5:MPI_Aint target_disp} , ${6:int target_count} , ${7:MPI_Datatype target_datatype} , ${8:MPI_Op op} , ${9:MPI_Win win} );
endsnippet
snippet MPI_Comm_get_name
MPI_Comm_get_name( ${1:MPI_Comm comm} , ${2:char* comm_name} , ${3:int* resultlen} );
endsnippet
snippet MPI_Cart_sub
MPI_Cart_sub( ${1:MPI_Comm comm} , ${2:int remain_dims[]} , ${3:MPI_Comm* new_comm} );
endsnippet
snippet MPI_File_write_ordered
MPI_File_write_ordered( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} , ${5:MPI_Status* status} );
endsnippet
snippet MPI_Group_range_excl
MPI_Group_range_excl( ${1:MPI_Group group} , ${2:int n} , ${3:int ranges[][3]} , ${4:MPI_Group* newgroup} );
endsnippet
snippet MPI_Comm_split
MPI_Comm_split( ${1:MPI_Comm comm} , ${2:int color} , ${3:int key} , ${4:MPI_Comm* newcomm} );
endsnippet
snippet MPI_Comm_set_errhandler
MPI_Comm_set_errhandler( ${1:MPI_Comm comm} , ${2:MPI_Errhandler errhandler} );
endsnippet
snippet MPI_Request_get_status
MPI_Request_get_status( ${1:MPI_Request request} , ${2:int* flag} , ${3:MPI_Status* status} );
endsnippet
snippet MPI_Group_free
MPI_Group_free( ${1:MPI_Group* group} );
endsnippet
snippet MPI_Type_create_keyval
MPI_Type_create_keyval( ${1:MPI_Type_copy_attr_function* type_copy_attr_fn} , ${2:MPI_Type_delete_attr_function* type_delete_attr_fn} , ${3:int* type_keyval} , ${4:void* extra_state} );
endsnippet
snippet MPI_File_write_ordered_begin
MPI_File_write_ordered_begin( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} );
endsnippet
snippet MPI_File_read_ordered_begin
MPI_File_read_ordered_begin( ${1:MPI_File fh} , ${2:void* buf} , ${3:int count} , ${4:MPI_Datatype datatype} );
endsnippet
snippet MPI_Graphdims_get
MPI_Graphdims_get( ${1:MPI_Comm comm} , ${2:int* nnodes} , ${3:int* nedges} );
endsnippet
snippet MPI_Comm_rank
MPI_Comm_rank( ${1:MPI_Comm comm} , ${2:int* rank} );
endsnippet
snippet MPI_Cancel
MPI_Cancel( ${1:MPI_Request* request} );
endsnippet
snippet MPI_Win_fence
MPI_Win_fence( ${1:int assert} , ${2:MPI_Win win} );
endsnippet
snippet MPI_Win_create_keyval
MPI_Win_create_keyval( ${1:MPI_Win_copy_attr_function* win_copy_attr_fn} , ${2:MPI_Win_delete_attr_function* win_delete_attr_fn} , ${3:int* win_keyval} , ${4:void* extra_state} );
endsnippet
snippet MPI_Errhandler_free
MPI_Errhandler_free( ${1:MPI_Errhandler* errhandler} );
endsnippet
snippet MPI_Win_test
MPI_Win_test( ${1:MPI_Win win} , ${2:int* flag} );
endsnippet
snippet MPI_Type_create_hindexed
MPI_Type_create_hindexed( ${1:int count} , ${2:int array_of_blocklengths[]} , ${3:MPI_Aint array_of_displacements[]} , ${4:MPI_Datatype oldtype} , ${5:MPI_Datatype* newtype} );
endsnippet
snippet MPI_Type_match_size
MPI_Type_match_size( ${1:int typeclass} , ${2:int size} , ${3:MPI_Datatype* type} );
endsnippet
snippet MPI_Send
MPI_Send( ${1:void* buf} , ${2:int count} , ${3:MPI_Datatype datatype} , ${4:int dest} , ${5:int tag} , ${6:MPI_Comm comm} );
endsnippet

snippet mainmpi
#include <mpi.h>

int main( int argc, char *argv[])
{
	MPI_Init(&argc, &argv);

	${1:}

	MPI_Finalize();

	return 0;
}
endsnippet

snippet CS
MPI_SELF
endsnippet

snippet CW
MPI_COMM_WORLD
endsnippet
